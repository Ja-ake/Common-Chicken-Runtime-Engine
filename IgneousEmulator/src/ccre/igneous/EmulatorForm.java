/*
 * Copyright 2013-2014 Colby Skeggs
 * 
 * This file is part of the CCRE, the Common Chicken Runtime Engine.
 * 
 * The CCRE is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 * 
 * The CCRE is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with the CCRE.  If not, see <http://www.gnu.org/licenses/>.
 */
package ccre.igneous;

import ccre.channel.BooleanInputPoll;
import ccre.channel.BooleanOutput;
import ccre.channel.EventInput;
import ccre.channel.FloatInputPoll;
import ccre.channel.FloatOutput;
import ccre.log.Logger;
import java.awt.Color;
import java.awt.Component;
import java.awt.EventQueue;
import java.util.HashMap;
import javax.swing.ButtonModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JProgressBar;
import javax.swing.JSlider;
import javax.swing.JToggleButton;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 * The main form displayed in the emulator.
 *
 * @author skeggsc
 */
@SuppressWarnings({"serial", "rawtypes"})
public class EmulatorForm extends javax.swing.JFrame {

    static {
        try {
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
            Logger.info("Set look-and-feel!");
        } catch (ClassNotFoundException ex) {
            Logger.warning("Cannot use look-and-feel!", ex);
        } catch (InstantiationException ex) {
            Logger.warning("Cannot use look-and-feel!", ex);
        } catch (IllegalAccessException ex) {
            Logger.warning("Cannot use look-and-feel!", ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.warning("Cannot use look-and-feel!", ex);
        }
    }

    /**
     * Set up a new EmulatorForm.
     */
    public EmulatorForm() {
        initComponents();
        motors = new JProgressBar[]{motor1, motor2, motor3, motor4, motor5, motor6, motor7, motor8, motor9, motor10};
        relayFwd = new JLabel[]{labFwd1, labFwd2, labFwd3, labFwd4, labFwd5, labFwd6, labFwd7, labFwd8};
        relayRev = new JLabel[]{labRev1, labRev2, labRev3, labRev4, labRev5, labRev6, labRev7, labRev8};
        joysticks = new EmuJoystick[]{emulatorJoystick1.joy, emulatorJoystick2.joy, emulatorJoystick3.joy, emulatorJoystick4.joy, emulatorJoystick5.joy, emulatorJoystick6.joy};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpMode = new javax.swing.ButtonGroup();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        motor2 = new javax.swing.JProgressBar();
        motor3 = new javax.swing.JProgressBar();
        motor1 = new javax.swing.JProgressBar();
        motor5 = new javax.swing.JProgressBar();
        motor4 = new javax.swing.JProgressBar();
        motor6 = new javax.swing.JProgressBar();
        motor7 = new javax.swing.JProgressBar();
        motor8 = new javax.swing.JProgressBar();
        motor9 = new javax.swing.JProgressBar();
        motor10 = new javax.swing.JProgressBar();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        sol1 = new javax.swing.JLabel();
        sol2 = new javax.swing.JLabel();
        sol3 = new javax.swing.JLabel();
        sol5 = new javax.swing.JLabel();
        sol4 = new javax.swing.JLabel();
        sol7 = new javax.swing.JLabel();
        sol6 = new javax.swing.JLabel();
        sol8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        analog1 = new javax.swing.JSlider();
        analog2 = new javax.swing.JSlider();
        analog3 = new javax.swing.JSlider();
        analog4 = new javax.swing.JSlider();
        analog5 = new javax.swing.JSlider();
        analog6 = new javax.swing.JSlider();
        analog7 = new javax.swing.JSlider();
        analog8 = new javax.swing.JSlider();
        emulatorJoystick1 = new ccre.igneous.EmulatorJoystick();
        emulatorJoystick2 = new ccre.igneous.EmulatorJoystick();
        emulatorJoystick3 = new ccre.igneous.EmulatorJoystick();
        emulatorJoystick4 = new ccre.igneous.EmulatorJoystick();
        emulatorJoystick5 = new ccre.igneous.EmulatorJoystick();
        emulatorJoystick6 = new ccre.igneous.EmulatorJoystick();
        jPanel4 = new javax.swing.JPanel();
        extendedSelect = new javax.swing.JComboBox();
        btnAddExtended = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        labCompressor = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        radTele = new javax.swing.JRadioButton();
        radAuto = new javax.swing.JRadioButton();
        radTest = new javax.swing.JRadioButton();
        btnEnable = new javax.swing.JToggleButton();
        labStatus = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        lcd1 = new javax.swing.JLabel();
        lcd2 = new javax.swing.JLabel();
        lcd3 = new javax.swing.JLabel();
        lcd4 = new javax.swing.JLabel();
        lcd5 = new javax.swing.JLabel();
        lcd6 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labFwd1 = new javax.swing.JLabel();
        labFwd2 = new javax.swing.JLabel();
        labFwd3 = new javax.swing.JLabel();
        labFwd4 = new javax.swing.JLabel();
        labRev4 = new javax.swing.JLabel();
        labRev3 = new javax.swing.JLabel();
        labRev2 = new javax.swing.JLabel();
        labRev1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        labFwd6 = new javax.swing.JLabel();
        labRev6 = new javax.swing.JLabel();
        labRev5 = new javax.swing.JLabel();
        labRev8 = new javax.swing.JLabel();
        labFwd8 = new javax.swing.JLabel();
        labRev7 = new javax.swing.JLabel();
        labFwd7 = new javax.swing.JLabel();
        labFwd5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        digital1 = new javax.swing.JToggleButton();
        digital6 = new javax.swing.JToggleButton();
        digital11 = new javax.swing.JToggleButton();
        digital2 = new javax.swing.JToggleButton();
        digital7 = new javax.swing.JToggleButton();
        digital12 = new javax.swing.JToggleButton();
        jPanel13 = new javax.swing.JPanel();
        digital3 = new javax.swing.JToggleButton();
        digital8 = new javax.swing.JToggleButton();
        digital13 = new javax.swing.JToggleButton();
        digital4 = new javax.swing.JToggleButton();
        digital9 = new javax.swing.JToggleButton();
        digital14 = new javax.swing.JToggleButton();
        jPanel14 = new javax.swing.JPanel();
        digital10 = new javax.swing.JToggleButton();
        digital5 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Motors");

        motor2.setForeground(new java.awt.Color(0, 0, 0));
        motor2.setMinimum(-100);
        motor2.setString("");
        motor2.setStringPainted(true);

        motor3.setForeground(new java.awt.Color(0, 0, 0));
        motor3.setMinimum(-100);
        motor3.setString("");
        motor3.setStringPainted(true);

        motor1.setForeground(new java.awt.Color(0, 0, 0));
        motor1.setMinimum(-100);
        motor1.setString("");
        motor1.setStringPainted(true);

        motor5.setForeground(new java.awt.Color(0, 0, 0));
        motor5.setMinimum(-100);
        motor5.setString("");
        motor5.setStringPainted(true);

        motor4.setForeground(new java.awt.Color(0, 0, 0));
        motor4.setMinimum(-100);
        motor4.setString("");
        motor4.setStringPainted(true);

        motor6.setForeground(new java.awt.Color(0, 0, 0));
        motor6.setMinimum(-100);
        motor6.setString("");
        motor6.setStringPainted(true);

        motor7.setForeground(new java.awt.Color(0, 0, 0));
        motor7.setMinimum(-100);
        motor7.setString("");
        motor7.setStringPainted(true);

        motor8.setForeground(new java.awt.Color(0, 0, 0));
        motor8.setMinimum(-100);
        motor8.setString("");
        motor8.setStringPainted(true);

        motor9.setForeground(new java.awt.Color(0, 0, 0));
        motor9.setMinimum(-100);
        motor9.setString("");
        motor9.setStringPainted(true);

        motor10.setForeground(new java.awt.Color(0, 0, 0));
        motor10.setMinimum(-100);
        motor10.setString("");
        motor10.setStringPainted(true);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(motor1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(motor2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(motor3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(motor4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(motor5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(motor6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(motor7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(motor9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(motor8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(motor10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(motor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(motor6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(motor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(motor7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(motor3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(motor8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(motor4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(motor9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(motor5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(motor10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Solenoids");

        sol1.setForeground(new java.awt.Color(100, 100, 100));
        sol1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sol1.setText("Solenoid 1");

        sol2.setForeground(new java.awt.Color(100, 100, 100));
        sol2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sol2.setText("Solenoid 2");

        sol3.setForeground(new java.awt.Color(100, 100, 100));
        sol3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sol3.setText("Solenoid 3");
        sol3.setToolTipText("");

        sol5.setForeground(new java.awt.Color(100, 100, 100));
        sol5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sol5.setText("Solenoid 5");
        sol5.setToolTipText("");

        sol4.setForeground(new java.awt.Color(100, 100, 100));
        sol4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sol4.setText("Solenoid 4");
        sol4.setToolTipText("");

        sol7.setForeground(new java.awt.Color(100, 100, 100));
        sol7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sol7.setText("Solenoid 7");
        sol7.setToolTipText("");

        sol6.setForeground(new java.awt.Color(100, 100, 100));
        sol6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sol6.setText("Solenoid 6");
        sol6.setToolTipText("");

        sol8.setForeground(new java.awt.Color(100, 100, 100));
        sol8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sol8.setText("Solenoid 8");
        sol8.setToolTipText("");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sol1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sol2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sol3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sol5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sol6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sol7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sol8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sol4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sol1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sol2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sol3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sol4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sol5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sol6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sol7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sol8))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Analog Inputs");

        analog1.setMaximum(4095);
        analog1.setSnapToTicks(true);
        analog1.setValue(2048);

        analog2.setMaximum(4095);
        analog2.setSnapToTicks(true);
        analog2.setValue(2048);

        analog3.setMaximum(4095);
        analog3.setSnapToTicks(true);
        analog3.setValue(2048);

        analog4.setMaximum(4095);
        analog4.setSnapToTicks(true);
        analog4.setValue(2048);

        analog5.setMaximum(4095);
        analog5.setSnapToTicks(true);
        analog5.setValue(2048);

        analog6.setMaximum(4095);
        analog6.setSnapToTicks(true);
        analog6.setValue(2048);

        analog7.setMaximum(4095);
        analog7.setSnapToTicks(true);
        analog7.setValue(2048);

        analog8.setMaximum(4095);
        analog8.setSnapToTicks(true);
        analog8.setValue(2048);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(analog4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(analog3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(analog2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(analog1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(analog7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(analog5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(analog6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(analog8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(analog1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(analog5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(analog2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(analog6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(analog3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(analog7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(analog4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(analog8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        emulatorJoystick1.setText("Joystick 1");

        emulatorJoystick2.setText("Joystick 2");

        emulatorJoystick3.setText("Joystick 3");

        emulatorJoystick4.setText("Joystick 4");

        emulatorJoystick5.setText("Kinect 5");

        emulatorJoystick6.setText("Kinect 6");

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        extendedSelect.setModel(availableExtendedSelection);

        btnAddExtended.setText("Add Extended");
        btnAddExtended.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddExtendedActionPerformed(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Compressor");

        labCompressor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labCompressor.setText("NOT CONTROLLED");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(extendedSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddExtended, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labCompressor, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(extendedSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel10)
                .addComponent(labCompressor)
                .addComponent(btnAddExtended))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnGrpMode.add(radTele);
        radTele.setSelected(true);
        radTele.setText("Teleoperated");

        btnGrpMode.add(radAuto);
        radAuto.setText("Autonomous");

        btnGrpMode.add(radTest);
        radTest.setText("Testing");

        btnEnable.setText("Enable");
        btnEnable.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnableActionPerformed(evt);
            }
        });

        labStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labStatus.setText("Disabled");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(radTele, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(radAuto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnEnable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(labStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(radTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(radTele)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radAuto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radTest, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEnable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("DSLCD");

        lcd1.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        lcd1.setText("-------NO DATA-------");

        lcd2.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        lcd2.setText("-------NO DATA-------");

        lcd3.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        lcd3.setText("-------NO DATA-------");

        lcd4.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        lcd4.setText("-------NO DATA-------");

        lcd5.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        lcd5.setText("-------NO DATA-------");

        lcd6.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        lcd6.setText("-------NO DATA-------");
        lcd6.setToolTipText("");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lcd1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lcd2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lcd3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lcd4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lcd5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lcd6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lcd1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lcd2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lcd3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lcd4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lcd5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lcd6))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Relays");

        labFwd1.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labFwd1.setText("1 Fwd");

        labFwd2.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labFwd2.setText("2 Fwd");

        labFwd3.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labFwd3.setText("3 Fwd");

        labFwd4.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labFwd4.setText("4 Fwd");

        labRev4.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labRev4.setText("4 Rev");

        labRev3.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labRev3.setText("3 Rev");

        labRev2.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labRev2.setText("2 Rev");

        labRev1.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labRev1.setText("1 Rev");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labFwd1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labRev1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labFwd2)
                    .addComponent(labRev2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labRev3)
                    .addComponent(labFwd3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labRev4)
                    .addComponent(labFwd4))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(labFwd1)
                .addComponent(labFwd2)
                .addComponent(labFwd3)
                .addComponent(labFwd4))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labRev2)
                    .addComponent(labRev1)
                    .addComponent(labRev3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labRev4)))
        );

        labFwd6.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labFwd6.setText("6 Fwd");

        labRev6.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labRev6.setText("6 Rev");

        labRev5.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labRev5.setText("5 Rev");

        labRev8.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labRev8.setText("8 Rev");

        labFwd8.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labFwd8.setText("8 Fwd");

        labRev7.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labRev7.setText("7 Rev");

        labFwd7.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labFwd7.setText("7 Fwd");

        labFwd5.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        labFwd5.setText("5 Fwd");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labFwd5)
                    .addComponent(labRev5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labFwd6)
                    .addComponent(labRev6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labFwd7)
                    .addComponent(labRev7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labFwd8)
                    .addComponent(labRev8))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(labFwd5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labRev5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(labFwd6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labRev6)))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(labFwd7)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(labRev7)))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(labFwd8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labRev8))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Digital I/O");

        digital1.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital1.setText("1");
        digital1.setEnabled(false);
        digital1.setMargin(new java.awt.Insets(2, 7, 2, 7));

        digital6.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital6.setText("6");
        digital6.setEnabled(false);
        digital6.setMargin(new java.awt.Insets(2, 7, 2, 7));

        digital11.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital11.setText("11");
        digital11.setEnabled(false);
        digital11.setMargin(new java.awt.Insets(2, 4, 2, 4));

        digital2.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital2.setText("2");
        digital2.setEnabled(false);
        digital2.setMargin(new java.awt.Insets(2, 7, 2, 7));

        digital7.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital7.setText("7");
        digital7.setEnabled(false);
        digital7.setMargin(new java.awt.Insets(2, 7, 2, 7));

        digital12.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital12.setText("12");
        digital12.setEnabled(false);
        digital12.setMargin(new java.awt.Insets(2, 4, 2, 4));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(digital11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(digital6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(digital1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(digital12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(digital7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(digital2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(digital1)
                    .addComponent(digital2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(digital6)
                    .addComponent(digital7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(digital11)
                    .addComponent(digital12)))
        );

        digital3.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital3.setText("3");
        digital3.setEnabled(false);
        digital3.setMargin(new java.awt.Insets(2, 7, 2, 7));

        digital8.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital8.setText("8");
        digital8.setEnabled(false);
        digital8.setMargin(new java.awt.Insets(2, 7, 2, 7));

        digital13.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital13.setText("13");
        digital13.setEnabled(false);
        digital13.setMargin(new java.awt.Insets(2, 4, 2, 4));

        digital4.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital4.setText("4");
        digital4.setEnabled(false);
        digital4.setMargin(new java.awt.Insets(2, 7, 2, 7));

        digital9.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital9.setText("9");
        digital9.setEnabled(false);
        digital9.setMargin(new java.awt.Insets(2, 7, 2, 7));

        digital14.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital14.setText("14");
        digital14.setEnabled(false);
        digital14.setMargin(new java.awt.Insets(2, 4, 2, 4));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(digital13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(digital8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(digital3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(digital14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(digital9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(digital4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(digital3)
                    .addComponent(digital4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(digital8)
                    .addComponent(digital9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(digital13)
                    .addComponent(digital14)))
        );

        digital10.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital10.setText("10");
        digital10.setEnabled(false);
        digital10.setMargin(new java.awt.Insets(2, 4, 2, 4));

        digital5.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        digital5.setText("5");
        digital5.setEnabled(false);
        digital5.setMargin(new java.awt.Insets(2, 7, 2, 7));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(digital10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(digital5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addComponent(digital5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(digital10))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(emulatorJoystick1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(emulatorJoystick2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emulatorJoystick3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emulatorJoystick4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emulatorJoystick5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emulatorJoystick6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emulatorJoystick1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emulatorJoystick2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emulatorJoystick3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emulatorJoystick4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emulatorJoystick5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addComponent(emulatorJoystick6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnableActionPerformed
        boolean on = btnEnable.isSelected();
        radAuto.setEnabled(!on);
        radTele.setEnabled(!on);
        radTest.setEnabled(!on);
        if (on) {
            ButtonModel selection = btnGrpMode.getSelection();
            if (selection == radAuto.getModel()) {
                labStatus.setText("Autonomous");
            } else if (selection == radTele.getModel()) {
                labStatus.setText("Teleoperated");
            } else if (selection == radTest.getModel()) {
                labStatus.setText("Testing");
            } else {
                labStatus.setText("Unknown");
            }
        } else {
            labStatus.setText("Disabled");
        }
    }//GEN-LAST:event_btnEnableActionPerformed

    /**
     * Allocate an encoder.
     *
     * @param aChannel The A-channel.
     * @param bChannel The B-channel.
     * @param reverse If the direction should be reversed.
     * @param resetWhen When to reset the encoder value, or null to never do so.
     * @return a channel representing the current position of the encoder.
     */
    @SuppressWarnings("unchecked")
    public FloatInputPoll makeEncoder(int aChannel, int bChannel, boolean reverse, EventInput resetWhen) {
        String name = "encoder::" + aChannel + "::" + bChannel;
        if (reverse) {
            name += "::reverse";
        }
        availableExtendedSelection.addElement(name);
        EncoderForm enc = new EncoderForm(name, resetWhen);
        extended.put(name, enc);
        return enc;
    }

    /**
     * Allocate a gyro.
     *
     * @param channel The channel for the Gyro.
     * @param sensitivity The Gyro's sensitivity value.
     * @param resetWhen When, if ever, to reset the Gyro's position.
     * @return a FloatInputPoll representing the current angle of the Gyro.
     */
    @SuppressWarnings("unchecked")
    public FloatInputPoll makeGyro(int channel, double sensitivity, EventInput resetWhen) {
        if (channel != 1 && channel != 2) {
            throw new RuntimeException("On a real robot, Gyros are only available on ports 1 and 2!");
        }
        String name = "gyro::" + channel + "::" + sensitivity;
        availableExtendedSelection.addElement(name);
        GyroForm gyr = new GyroForm(name, resetWhen);
        extended.put(name, gyr);
        return gyr;
    }

    /**
     * Allocate an accelerometer.
     *
     * @param channel The channel for the accelerometer.
     * @param sensitivity The accelerometer's sensitivity value.
     * @param zeropoint The zeropoint of the accelerometer.
     * @return a FloatInputPoll representing the current acceleration of the
     * accelerometer.
     */
    @SuppressWarnings("unchecked")
    public FloatInputPoll makeAccelerometerAxis(int channel, double sensitivity, double zeropoint) {
        String name = "accelerometer::" + channel + "::" + sensitivity + "::" + zeropoint;
        availableExtendedSelection.addElement(name);
        AccelerometerForm gyr = new AccelerometerForm(name);
        extended.put(name, gyr);
        return gyr;
    }

    private void btnAddExtendedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddExtendedActionPerformed
        String s = (String) availableExtendedSelection.getSelectedItem();
        if (s == null) {
            return;
        }
        extended.get(s).setVisible(true);
    }//GEN-LAST:event_btnAddExtendedActionPerformed
    private final DefaultComboBoxModel availableExtendedSelection = new DefaultComboBoxModel();
    private final HashMap<String, Component> extended = new HashMap<String, Component>(4);
    private final JProgressBar[] motors;
    private final JLabel[] relayFwd, relayRev;
    /**
     * The list of the six emulated joysticks available through this form.
     */
    public final EmuJoystick[] joysticks;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider analog1;
    private javax.swing.JSlider analog2;
    private javax.swing.JSlider analog3;
    private javax.swing.JSlider analog4;
    private javax.swing.JSlider analog5;
    private javax.swing.JSlider analog6;
    private javax.swing.JSlider analog7;
    private javax.swing.JSlider analog8;
    private javax.swing.JButton btnAddExtended;
    private javax.swing.JToggleButton btnEnable;
    private javax.swing.ButtonGroup btnGrpMode;
    private javax.swing.JToggleButton digital1;
    private javax.swing.JToggleButton digital10;
    private javax.swing.JToggleButton digital11;
    private javax.swing.JToggleButton digital12;
    private javax.swing.JToggleButton digital13;
    private javax.swing.JToggleButton digital14;
    private javax.swing.JToggleButton digital2;
    private javax.swing.JToggleButton digital3;
    private javax.swing.JToggleButton digital4;
    private javax.swing.JToggleButton digital5;
    private javax.swing.JToggleButton digital6;
    private javax.swing.JToggleButton digital7;
    private javax.swing.JToggleButton digital8;
    private javax.swing.JToggleButton digital9;
    private ccre.igneous.EmulatorJoystick emulatorJoystick1;
    private ccre.igneous.EmulatorJoystick emulatorJoystick2;
    private ccre.igneous.EmulatorJoystick emulatorJoystick3;
    private ccre.igneous.EmulatorJoystick emulatorJoystick4;
    private ccre.igneous.EmulatorJoystick emulatorJoystick5;
    private ccre.igneous.EmulatorJoystick emulatorJoystick6;
    private javax.swing.JComboBox extendedSelect;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel labCompressor;
    private javax.swing.JLabel labFwd1;
    private javax.swing.JLabel labFwd2;
    private javax.swing.JLabel labFwd3;
    private javax.swing.JLabel labFwd4;
    private javax.swing.JLabel labFwd5;
    private javax.swing.JLabel labFwd6;
    private javax.swing.JLabel labFwd7;
    private javax.swing.JLabel labFwd8;
    private javax.swing.JLabel labRev1;
    private javax.swing.JLabel labRev2;
    private javax.swing.JLabel labRev3;
    private javax.swing.JLabel labRev4;
    private javax.swing.JLabel labRev5;
    private javax.swing.JLabel labRev6;
    private javax.swing.JLabel labRev7;
    private javax.swing.JLabel labRev8;
    private javax.swing.JLabel labStatus;
    private javax.swing.JLabel lcd1;
    private javax.swing.JLabel lcd2;
    private javax.swing.JLabel lcd3;
    private javax.swing.JLabel lcd4;
    private javax.swing.JLabel lcd5;
    private javax.swing.JLabel lcd6;
    private javax.swing.JProgressBar motor1;
    private javax.swing.JProgressBar motor10;
    private javax.swing.JProgressBar motor2;
    private javax.swing.JProgressBar motor3;
    private javax.swing.JProgressBar motor4;
    private javax.swing.JProgressBar motor5;
    private javax.swing.JProgressBar motor6;
    private javax.swing.JProgressBar motor7;
    private javax.swing.JProgressBar motor8;
    private javax.swing.JProgressBar motor9;
    private javax.swing.JRadioButton radAuto;
    private javax.swing.JRadioButton radTele;
    private javax.swing.JRadioButton radTest;
    private javax.swing.JLabel sol1;
    private javax.swing.JLabel sol2;
    private javax.swing.JLabel sol3;
    private javax.swing.JLabel sol4;
    private javax.swing.JLabel sol5;
    private javax.swing.JLabel sol6;
    private javax.swing.JLabel sol7;
    private javax.swing.JLabel sol8;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the current operating state.
     */
    public CurrentState getOperatingState() {
        if (btnEnable.isSelected()) {
            if (radAuto.isSelected()) {
                return CurrentState.AUTONOMOUS;
            } else if (radTele.isSelected()) {
                return CurrentState.TELEOPERATED;
            } else if (radTest.isSelected()) {
                return CurrentState.TESTING;
            } else {
                Logger.severe("Invalid operating state!");
                return CurrentState.DISABLED;
            }
        } else {
            return CurrentState.DISABLED;
        }
    }

    /**
     * Allocate a Jaguar.
     *
     * @param id the port to allocate the Jaguar on.
     * @return an output that can control the Jaguar.
     */
    public FloatOutput getJaguar(int id) {
        return getMotorColored(id, new Color(0xA10000), -1, 1);
    }

    /**
     * Allocate a Victor.
     *
     * @param id the port to allocate the Victor on.
     * @return an output that can control the Victor.
     */
    public FloatOutput getVictor(int id) {
        return getMotorColored(id, new Color(0x008282), -1, 1);
    }

    /**
     * Allocate a Talon.
     *
     * @param id the port to allocate the Talon on.
     * @return an output that can control the Talon.
     */
    public FloatOutput getTalon(int id) {
        return getMotorColored(id, new Color(0xA1A100), -1, 1);
    }

    /**
     * Allocate a Servo.
     *
     * @param id the port to allocate the Servo on.
     * @param minInput the input that should be the minimum of the servo's
     * range.
     * @param maxInput the input that should be the maximum of the servo's
     * range.
     * @return an output that can control the Servo.
     */
    public FloatOutput getServo(int id, float minInput, float maxInput) {
        return getMotorColored(id, new Color(0xFF0000), minInput, maxInput);
    }

    /**
     * Free the specified motor.
     *
     * @param port the motor ID to free.
     */
    public void freeMotor(int port) {
        final JProgressBar bar = motors[port - 1];
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                bar.setForeground(Color.BLACK);
                bar.setValue(0);
            }
        });
    }

    private FloatOutput getMotorColored(int id, final Color color, final float minInput, final float maxInput) {
        final JProgressBar jpb = motors[id - 1];
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                jpb.setForeground(color);
            }
        });
        return new FloatOutput() {
            @Override
            public void set(final float f) {
                EventQueue.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        float resultRange = maxInput - minInput, rawRange = jpb.getMaximum() - jpb.getMinimum();
                        jpb.setValue(Math.round((f - minInput) * rawRange / resultRange + jpb.getMinimum()));
                    }
                });
            }
        };
    }

    /**
     * Allocate a Solenoid.
     *
     * @param id the port number of the solenoid.
     * @return the output that controls this solenoid.
     */
    public BooleanOutput getSolenoid(int id) {
        final JLabel lab;
        switch (id) {
            case 1:
                lab = sol1;
                break;
            case 2:
                lab = sol2;
                break;
            case 3:
                lab = sol3;
                break;
            case 4:
                lab = sol4;
                break;
            case 5:
                lab = sol5;
                break;
            case 6:
                lab = sol6;
                break;
            case 7:
                lab = sol7;
                break;
            case 8:
                lab = sol8;
                break;
            default:
                throw new RuntimeException("Invalid solenoid ID: " + id);
        }
        return new BooleanOutput() {
            @Override
            public void set(final boolean bln) {
                EventQueue.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        lab.setForeground(bln ? ENABLED_COLOR : Color.RED);
                    }
                });
            }
        };
    }
    private static final Color ENABLED_COLOR = new Color(0, 192, 0);

    /**
     * Allocate an analog channel.
     *
     * @param id the port number for the analog channel.
     * @return a FloatInputPoll representing the currently-read voltage on this
     * port.
     */
    public FloatInputPoll getAnalog(int id) {
        final FloatInputPoll base = getAnalogValue(id);
        return new FloatInputPoll() {
            @Override
            public float get() { // Returns in the -3.5v to 3.5v range.
                return 7 * base.get() / 4095f - 3.5f;
            }
        };
    }

    /**
     * Allocate an analog channel.
     *
     * @param id the port number for the analog channel.
     * @return a FloatInputPoll representing the currently-read raw value on
     * this port.
     */
    public FloatInputPoll getAnalogValue(int id) {
        final JSlider sli;
        switch (id) {
            case 1:
                sli = analog1;
                break;
            case 2:
                sli = analog2;
                break;
            case 3:
                sli = analog3;
                break;
            case 4:
                sli = analog4;
                break;
            case 5:
                sli = analog5;
                break;
            case 6:
                sli = analog6;
                break;
            case 7:
                sli = analog7;
                break;
            case 8:
                sli = analog8;
                break;
            default:
                throw new RuntimeException("Invalid analog index: " + id);
        }
        return new FloatInputPoll() {
            @Override
            public float get() {
                return sli.getValue();
            }
        };
    }

    /**
     * Allocate a digital port.
     *
     * @param id the port on which to allocate the digital port.
     * @return the JToggleButton representing this port.
     */
    private JToggleButton getDigital(int id) {
        switch (id) {
            case 1:
                return digital1;
            case 2:
                return digital2;
            case 3:
                return digital3;
            case 4:
                return digital4;
            case 5:
                return digital5;
            case 6:
                return digital6;
            case 7:
                return digital7;
            case 8:
                return digital8;
            case 9:
                return digital9;
            case 10:
                return digital10;
            case 11:
                return digital11;
            case 12:
                return digital12;
            case 13:
                return digital13;
            case 14:
                return digital14;
            default:
                throw new RuntimeException("Invalid digital input index: " + id);
        }
    }

    /**
     * Allocate a digital input.
     *
     * @param id the port on which to allocate the digital input.
     * @return a BooleanInputPoll representing this input.
     */
    public BooleanInputPoll getDigitalInput(int id) {
        final JToggleButton dig = getDigital(id);
        dig.setEnabled(true);
        return new BooleanInputPoll() {
            @Override
            public boolean get() {
                return dig.isSelected();
            }
        };
    }

    /**
     * Free a digital input.
     *
     * @param id the port number of the input to free.
     */
    public void freeDigitalInput(int id) {
        getDigital(id).setEnabled(false);
        getDigital(id).setSelected(false);
    }

    /**
     * Allocate a digital output.
     *
     * @param id the port on which to allocate the digital output.
     * @return a BooleanOutputPoll representing this output.
     */
    public BooleanOutput getDigitalOutput(int id) {
        final JToggleButton dig = getDigital(id);
        return new BooleanOutput() {
            @Override
            public void set(boolean out) {
                dig.setSelected(out);
            }
        };
    }

    /**
     * Free a digital output.
     *
     * @param id the port number of the output to free.
     */
    public void freeDigitalOutput(int id) {
        getDigital(id).setSelected(false);
    }

    /**
     * Send text to the Driver Station LCD screen.
     *
     * @param text the text to send.
     * @param line the line to write to.
     */
    public void sendDSUpdate(final String text, int line) {
        final JLabel tgt;
        switch (line) {
            case 1:
                tgt = lcd1;
                break;
            case 2:
                tgt = lcd2;
                break;
            case 3:
                tgt = lcd3;
                break;
            case 4:
                tgt = lcd4;
                break;
            case 5:
                tgt = lcd5;
                break;
            case 6:
                tgt = lcd6;
                break;
            default:
                throw new RuntimeException("Bad LCD line: " + line);
        }
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                tgt.setText(text.length() > 21 ? text.substring(0, 21) : text);
            }
        });
    }

    /**
     * Set the compressor enable state to the specified boolean.
     *
     * @param compressorOn whether or not the compressor should be running.
     */
    public void setCompressor(boolean compressorOn) {
        labCompressor.setText(compressorOn ? "ENABLED" : "DISABLED");
    }

    private BooleanOutput wrapRelayLabel(final JLabel lab) {
        return new BooleanOutput() {
            @Override
            public void set(boolean value) {
                lab.setForeground(value ? Color.GREEN : Color.RED);
            }
        };
    }

    /**
     * Allocate the forward half of a relay.
     *
     * @param channel the relay number to allocate.
     * @return the output representing this half of the relay.
     */
    public BooleanOutput makeRelayForward(int channel) {
        return wrapRelayLabel(relayFwd[channel - 1]);
    }

    /**
     * Allocate the reverse half of a relay.
     *
     * @param channel the relay number to allocate.
     * @return the output representing this half of the relay.
     */
    public BooleanOutput makeRelayReverse(int channel) {
        return wrapRelayLabel(relayRev[channel - 1]);
    }

    /**
     * Free the specified relay.
     *
     * @param id the relay number to free.
     * @param fwd should the forward channel be freed instead of the reverse channel.F
     */
    public void freeRelay(int id, boolean fwd) {
        (fwd ? relayFwd : relayRev)[id - 1].setForeground(Color.BLACK);
    }
}
