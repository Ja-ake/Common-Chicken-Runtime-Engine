/*
 * Copyright 2013 Colby Skeggs
 * 
 * This file is part of the CCRE, the Common Chicken Runtime Engine.
 * 
 * The CCRE is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 * 
 * The CCRE is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with the CCRE.  If not, see <http://www.gnu.org/licenses/>.
 */
package poultryinspector.interactor;

import ccre.chan.FloatInputProducer;
import ccre.chan.FloatOutput;
import ccre.holders.FloatTuner;
import ccre.log.Logger;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;

public class TuneForm extends javax.swing.JFrame {

    protected final FloatTuner tuner;
    protected FloatInputProducer automaticTarget;

    public static void create(final String name, final FloatTuner tuner) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TuneForm(name, tuner).setVisible(true);
            }
        });
    }

    private TuneForm(String name, final FloatTuner tuner) {
        initComponents();
        this.tuner = tuner;
        final FloatOutput autotarget = new FloatOutput() {
            @Override
            public void writeValue(final float flt) {
                java.awt.EventQueue.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        labAutotune.setText(String.valueOf(flt));
                    }
                });
            }
        };
        final FloatOutput rn = new FloatOutput() {
            @Override
            public void writeValue(final float flt) {
                java.awt.EventQueue.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        labValue.setText(String.valueOf(flt));
                    }
                });
                if (automaticTarget == null) {
                    FloatInputProducer atm = tuner.getAutomaticChannel();
                    if (atm != null) {
                        automaticTarget = atm;
                        atm.addTarget(autotarget);
                    }
                }
            }
        };
        tuner.addTarget(rn);
        Float cur = tuner.getCurrentValue();
        if (cur != null) {
            rn.writeValue(cur);
        }
        labName.setText(name);
        this.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {
            }

            @Override
            public void windowClosing(WindowEvent e) {
                tuner.removeTarget(rn);
                if (automaticTarget != null) {
                    automaticTarget.removeTarget(autotarget);
                }
                setVisible(false);
                dispose();
            }

            @Override
            public void windowClosed(WindowEvent e) {
            }

            @Override
            public void windowIconified(WindowEvent e) {
            }

            @Override
            public void windowDeiconified(WindowEvent e) {
            }

            @Override
            public void windowActivated(WindowEvent e) {
            }

            @Override
            public void windowDeactivated(WindowEvent e) {
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtValue = new javax.swing.JTextField();
        labValue = new javax.swing.JLabel();
        btnModify = new javax.swing.JButton();
        labName = new javax.swing.JLabel();
        labAutotune = new javax.swing.JLabel();
        btnAutotune = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        txtValue.setText("Manual tuning target");

        labValue.setText("Unknown value");

        btnModify.setText("Manually Tune");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        labName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labName.setText("<NAME>");

        labAutotune.setText("Waiting for automatic tuning...");

        btnAutotune.setText("Automatic Tune");
        btnAutotune.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutotuneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnModify, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
            .addComponent(txtValue)
            .addComponent(labValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(labName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(labAutotune, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnAutotune, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(labName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labValue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModify)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labAutotune)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAutotune))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        try {
            tuner.tuneTo(Float.parseFloat(txtValue.getText()));
        } catch (NumberFormatException nm) {
            Logger.warning("Attempt to tune to invalid number!");
        }
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnAutotuneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutotuneActionPerformed
        try {
            tuner.tuneTo(Float.parseFloat(labAutotune.getText()));
        } catch (NumberFormatException nm) {
            Logger.warning("Invalid automatic tuning!");
        }
    }//GEN-LAST:event_btnAutotuneActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutotune;
    private javax.swing.JButton btnModify;
    private javax.swing.JLabel labAutotune;
    private javax.swing.JLabel labName;
    private javax.swing.JLabel labValue;
    private javax.swing.JTextField txtValue;
    // End of variables declaration//GEN-END:variables
}
