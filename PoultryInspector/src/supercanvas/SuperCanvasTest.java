/*
 * Copyright 2013-2014 Colby Skeggs.
 * 
 * This file is part of the CCRE, the Common Chicken Runtime Engine.
 * 
 * The CCRE is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 * 
 * The CCRE is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with the CCRE.  If not, see <http://www.gnu.org/licenses/>.
 */
package supercanvas;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import ccre.log.FileLogger;
import ccre.log.Logger;
import ccre.log.NetworkAutologger;
import ccre.net.CountingNetworkProvider;

/**
 * A test launcher for the SuperCanvas system. This will be superceded, or at
 * least renamed, when this becomes the main mechanism for the Poultry
 * Inspector.
 *
 * @author skeggsc
 */
public class SuperCanvasTest extends javax.swing.JFrame {

    private static final long serialVersionUID = -4924276427803831926L;

    /**
     * Creates new form SuperCanvasTest
     */
    public SuperCanvasTest() {
        initComponents();
        this.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                try {
                    if (canvas.editing != null) {
                        char c = e.getKeyChar();
                        if (c >= 32 && c <= 126) {
                            canvas.editing.append(c);
                        } else {
                            switch (e.getKeyCode()) {
                            case KeyEvent.VK_ESCAPE: canvas.editing.setLength(0); break;
                            case KeyEvent.VK_BACK_SPACE: canvas.editing.setLength(Math.max(0, canvas.editing.length() - 1)); break;
                            case KeyEvent.VK_ENTER: canvas.pressedEnter(); break;
                            }
                        }
                    } else if (e.getKeyCode() == KeyEvent.VK_SHIFT) {
                        if (e.isControlDown()) {
                            canvas.editmode = !canvas.editmode;
                        } else if (!canvas.removeAll(TopLevelPaletteComponent.class)) {
                            canvas.add(new TopLevelPaletteComponent(200, 200));
                        }
                    }
                } catch (Throwable thr) {
                    Logger.severe("Exception while handling key press", thr);
                }
            }
        });
        canvas.add(new LoggingComponent(300, 300));
        canvas.add(new TrashComponent(200, 200));
        canvas.add(new NetworkPaletteComponent(400, 200));
        canvas.add(new CluckNetworkingComponent());
        canvas.add(new EditModeComponent());
        //canvas.add(lpc);
        canvas.add(new SaveLoadComponent(0, 0));
        canvas.add(new PhidgetMonitorComponent.VirtualPhidget(100, 100));
        canvas.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas = new supercanvas.SuperCanvasPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout canvasLayout = new javax.swing.GroupLayout(canvas);
        canvas.setLayout(canvasLayout);
        canvasLayout.setHorizontalGroup(canvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 640, Short.MAX_VALUE));
        canvasLayout.setVerticalGroup(canvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 480, Short.MAX_VALUE));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(canvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(canvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //System.setProperty("sun.io.serialization.extendedDebugInfo", "true");
        CountingNetworkProvider.register();
        NetworkAutologger.register();
        FileLogger.register();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase
         * /tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SuperCanvasTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SuperCanvasTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SuperCanvasTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SuperCanvasTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SuperCanvasTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private supercanvas.SuperCanvasPanel canvas;
    // End of variables declaration//GEN-END:variables
}
