<?xml version="1.0" encoding="UTF-8"?>

<!--
/*
 * Copyright 2014 Colby Skeggs
 * 
 * This file is part of the CCRE, the Common Chicken Runtime Engine.
 * 
 * The CCRE is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 * 
 * The CCRE is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with the CCRE.  If not, see <http://www.gnu.org/licenses/>.
 */
 -->

<project name="CCRE Build">

	<!-- ccre-nonroot.dir and project.dir are set by the launch configuration, as generated by rebuild-builders.xml -->
	<property name="ccre-root.dir" location="${ccre-nonroot.dir}/.." />
	<property name="src.dir" value="${project.dir}/src" />
	<property name="build.dir" value="${project.dir}/build" />
	<property name="dist.dir" value="${project.dir}/dist" />

	<property file="${user.home}/wpilib/wpilib.properties" />
	<property file="${project.dir}/build.properties" />
	<property file="${user.home}/wpilib/java/${version}/ant/build.properties" />
	<property file="${src.dir}/main.properties" />

	<property name="emulate.jar" value="${dist.dir}/EmulationTarget.jar" />
	<property name="emulator.dir"
	          value="${ccre-root.dir}/IgneousEmulator/bin" />
	<property name="classpath-new"
	          value="${classpath}${path.separator}${ccre-root.dir}/CCRE_Igneous_RoboRIO/Igneous.jar" />

	<!-- Used iff wpilib 2015 is not installed. -->
	<property name="src.dir" value="src" />
	<property name="wpilib.ant.dir" value="ant_imposter" />

	<import file="${wpilib.ant.dir}/build.xml" />

	<target name="compile" description="Compile the source code.">
		<mkdir dir="${build.dir}" />
		<echo>[athena-compile] Compiling ${src.dir} with classpath=${classpath-new} to ${build.dir} with version ${ant.java.version}</echo>

		<javac srcdir="${src.dir}"
		       destdir="${build.dir}"
		       includeAntRuntime="no"
		       includeJavaRuntime="no"
		       classpath="${classpath-new}"
		       target="${ant.java.version}"
		       source="${ant.java.version}"
		       compiler="javac${ant.java.version}"
		       debug="true">
		</javac>
	</target>

	<target name="jar" depends="compile">
		<echo>[athena-jar] Making jar ${dist.jar}.</echo>
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${build.jars}" />

		<echo>[athena-jar] Copying jars from ${classpath-new} to ${build.jars}.</echo>
		<copy todir="${build.jars}" flatten="true">
			<path>
				<pathelement path="${classpath-new}" />
			</path>
		</copy>

		<property name="boot-class" value="edu.wpi.first.wpilibj.RobotBase" />

		<jar destfile="${dist.jar}" update="false">
			<manifest>
				<attribute name="Main-Class" value="${boot-class}" />
				<attribute name="Robot-Class"
				           value="ccre.igneous.MainIgneousLauncherImpl" />
				<attribute name="CCRE-Main" value="${igneous.main}" />
				<attribute name="Class-Path" value="." />
			</manifest>

			<fileset dir="${build.dir}" includes="**/*.class" />

			<zipgroupfileset dir="${build.jars}">
				<include name="**/*.jar" />
			</zipgroupfileset>
		</jar>

		<jar destfile="${emulate.jar}" update="false">
			<manifest>
				<attribute name="Igneous-Main" value="${igneous.main}" />
			</manifest>

			<fileset dir="${build.dir}" includes="**/*.class" />
		</jar>
	</target>

	<target name="fetch-logs" depends="get-target-ip">

		<tempfile property="log.dir"
		          destdir="${project.dir}"
		          prefix="roboRIO-logs-" />

		<basename file="${log.dir}" property="log.file" />
		
		<sshexec host="${target}" username="${username}" password="${password}" trust="true" outputproperty="log.exists" command="echo ccre-storage/log-*" />
		
		<condition property="should-fetch-logs" value="set">
			<not>
				<equals trim="true" arg1="${log.exists}" arg2="ccre-storage/log-*" />
			</not>
		</condition>
		
		<antcall target="fetch-logs-real" />
	</target>
		
	<target name="fetch-logs-real" if="should-fetch-logs">
		<echo>[ccre-log-fetch] Packaging old logs: ${log.dir}: ${should-fetch-logs}: ${log.exists}</echo>
		<sshexec host="${target}"
		         username="${username}"
		         password="${password}"
		         trust="true"
		         command="(! ls ccre-storage/log-*) || (tar -czf logs-${log.file}.tgz ccre-storage/log-* &amp;&amp; mkdir /tmp/${log.file}/ &amp;&amp; mv ccre-storage/log-* /tmp/${log.file}/)" />

		<echo>[ccre-log-fetch] Retrieving old logs...</echo>

		<scp file="${username}@${target}:logs-${log.file}.tgz"
		     todir="${project.dir}"
		     password="${password}"
		     trust="true" />
	</target>

	<target name="deploy"
	        depends="clean,jar,get-target-ip,dependencies,fetch-logs"
	        description="Deploy the jar and start the program running.">
		<echo>[athena-deploy] Deploying CCRE-based code.</echo>
		<scp file="${dist.jar}"
		     todir="${username}@${target}:${deploy.dir}"
		     password="${password}"
		     trust="true" />

		<sshexec host="${target}"
		         username="admin"
		         password="${password}"
		         trust="true"
		         failonerror="false"
		         command="killall netconsole-host" />
		<scp file="${wpilib.ant.dir}/netconsole-host"
		     todir="admin@${target}:/usr/local/frc/bin"
		     password="${password}"
		     trust="true" />

		<scp file="${wpilib.ant.dir}/robotCommand"
		     todir="${username}@${target}:${command.dir}"
		     password="${password}"
		     trust="true" />

		<echo>[athena-deploy] Starting program.</echo>
		<sshexec host="${target}"
		         username="${username}"
		         password="${password}"
		         trust="true"
		         command="${deploy.kill.command};" />
	</target>

	<target name="emulate" depends="jar">
		<mkdir dir="${project.dir}/emulation-roborio" />
		<java jar="${ccre-root.dir}/IgneousEmulator/Emulator.jar"
		      fork="true"
		      dir="${project.dir}/emulation-roborio">
			<arg value="${emulate.jar}" />
			<arg value="roboRIO" />
			<classpath>
				<fileset dir="${emulator.dir}" includes="**/*.class" />
			</classpath>
		</java>
	</target>

	<import file="${ccre-root.dir}/CCRE_Igneous_cRIO/src/external_build_2014.xml" />

</project>
